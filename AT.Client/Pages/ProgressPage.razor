@page "/progresses"
@inject IProgressService ProgressService
@inject IProjectTypeService ProjectTypeService
@inject IJSRuntime JS
@using AT.Share.Model
<div class="container">
    <h1 class="my-4">Quản lý tiến độ</h1>
    <button class="btn btn-primary mb-3" @onclick="ShowAddModal">Thêm tiến độ mới</button>

    <div class="overflow-auto">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="text-center">ID</th>
                    <th class="text-center">Tên</th>
                    <th class="text-center">Loại Dự Án</th>
                    <th class="text-center">Hành Động</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var progress in progresses)
                {
                    <tr>
                        <td class="text-center">@progress.Id</td>
                        <td class="text-center">@progress.Name</td>
                        <td class="text-center">@progress.ProjectTypeId</td>
                        <td class="text-center">
                            <button class="btn btn-warning me-2 mb-2" @onclick="() => ShowEditModal(progress)">Sửa</button>
                            <button class="btn btn-danger mb-2" @onclick="() => ShowDeleteConfirmation(progress.Id)">Xóa</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (isModalVisible)
    {
        <div class="modal fade show" tabindex="-1" style="display: block;" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title text-center">@modalTitle</h5>
                        <button type="button" class="btn-close" @onclick="HideModal"></button>
                    </div>
                    <div class="modal-body">
                        @if (modalAction != "delete")
                        {
                            <EditForm Model="@selectedProgress" OnValidSubmit="HandleValidSubmit">
                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <div class="mb-3 text-center">
                                    <label for="name" class="form-label">Tên:</label>
                                    <InputText id="name" class="form-control mx-auto" @bind-Value="selectedProgress.Name" />
                                </div>

                                <div class="mb-3 text-center">
                                    <label for="projectTypeId" class="form-label">Loại Dự Án:</label>
                                    <select id="projectTypeId" class="form-control mx-auto" @onchange="OnProjectTypeChanged">
                                        <option value="">Chọn loại dự án</option>
                                        @foreach (var pt in projectTypes)
                                        {
                                            <option value="@pt.Id">@pt.Name</option>
                                        }
                                    </select>
                                </div>

                                <div class="text-center">
                                    <button type="submit" class="btn btn-primary">Lưu</button>
                                    <button type="button" class="btn btn-secondary" @onclick="HideModal">Hủy</button>
                                </div>
                            </EditForm>
                        }
                        else
                        {
                            <p class="text-center">Bạn có chắc chắn muốn xóa tiến độ này?</p>
                            <div class="text-center">
                                <button type="button" class="btn btn-danger me-2 mb-2" @onclick="HandleDelete">Xóa</button>
                                <button type="button" class="btn btn-secondary mb-2" @onclick="HideModal">Hủy</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<ProgressModel> progresses = new List<ProgressModel>();
    private List<ProjectTypeModel> projectTypes = new List<ProjectTypeModel>();
    private ProgressModel selectedProgress = new ProgressModel();
    private bool isModalVisible = false;
    private string modalTitle = "";
    private string modalAction = ""; // "edit" or "delete"

    protected override async Task OnInitializedAsync()
    {
        await LoadProgresses();
        await LoadProjectTypes();
    }

    private async Task LoadProgresses()
    {
        progresses = await ProgressService.GetProgressesAsync();
    }

    private async Task LoadProjectTypes()
    {
        projectTypes = await ProjectTypeService.GetProjectTypesAsync();
    }

    private void ShowAddModal()
    {
        selectedProgress = new ProgressModel();
        modalTitle = "Thêm tiến độ";
        modalAction = "add";
        isModalVisible = true;
    }

    private void ShowEditModal(ProgressModel progress)
    {
        selectedProgress = progress;
        modalTitle = "Sửa tiến độ";
        modalAction = "edit";
        isModalVisible = true;
    }

    private void ShowDeleteConfirmation(int id)
    {
        selectedProgress = progresses.FirstOrDefault(p => p.Id == id);
        modalTitle = "Xóa tiến độ";
        modalAction = "delete";
        isModalVisible = true;
    }

    private async Task HandleValidSubmit()
    {
        if (modalAction == "add")
        {
            await ProgressService.AddProgressAsync(selectedProgress);
        }
        else if (modalAction == "edit")
        {
            await ProgressService.UpdateProgressAsync(selectedProgress);
        }

        await LoadProgresses();
        HideModal();
    }
    private async Task OnProjectTypeChanged(ChangeEventArgs e)
    {
        // Cập nhật selectedProgress.ProjectTypeId với giá trị mới từ select
        if (int.TryParse(e.Value?.ToString(), out int selectedId))
        {
            selectedProgress.ProjectTypeId = selectedId;
        }
        else
        {
            selectedProgress.ProjectTypeId = 0;
        }
    }
    private async Task HandleDelete()
    {
        await ProgressService.DeleteProgressAsync(selectedProgress.Id);
        await LoadProgresses();
        HideModal();
    }

    private void HideModal()
    {
        isModalVisible = false;
    }
}
